Grammar

    0 $accept: program_start $end

    1 program_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    5 ident_term: IDENT

    6 stmt_loop: stmt_options SEMICOLON stmt_loop
    7          | %empty

    8 declare_loop: declaration SEMICOLON declare_loop
    9             | %empty

   10 declaration: IDENT ident_loop

   11 ident_loop: COMMA IDENT ident_loop
   12           | COLON declaration_3 INTEGER

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   14              | %empty

   15 stmt_options: statement_1
   16             | statement_2
   17             | statement_3
   18             | statement_4
   19             | statement_5
   20             | statement_6
   21             | CONTINUE
   22             | RETURN expression

   23 statement_1: var ASSIGN expression

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF

   25 statement_21: %empty
   26             | ELSE stmt_loop

   27 statement_3: WHILE bool_exp b_loop BEGINLOOP stmt_loop ENDLOOP

   28 b_loop: %empty

   29 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

   30 statement_5: READ var statement_51

   31 statement_51: COMMA var statement_51
   32             | %empty

   33 statement_6: WRITE var statement_61

   34 statement_61: COMMA var statement_61
   35             | %empty

   36 bool_exp: rel_and_exp bool_exp2

   37 bool_exp2: OR rel_and_exp bool_exp2
   38          | %empty

   39 rel_and_exp: relation_exp rel_and_exp2

   40 rel_and_exp2: AND relation_exp rel_and_exp2
   41             | %empty

   42 relation_exp: relation_exp_s
   43             | NOT relation_exp_s

   44 relation_exp_s: expression comp expression
   45               | TRUE
   46               | FALSE
   47               | L_PAREN bool_exp R_PAREN

   48 comp: EQ
   49     | NEQ
   50     | LT
   51     | GT
   52     | LTE
   53     | GTE

   54 expression: mult_expr expression_2

   55 expression_2: ADD mult_expr expression_2
   56             | SUB mult_expr expression_2
   57             | %empty

   58 mult_expr: term mult_expr_2

   59 mult_expr_2: MULT term mult_expr_2
   60            | DIV term mult_expr_2
   61            | MOD term mult_expr_2
   62            | %empty

   63 term: SUB term_2
   64     | term_2
   65     | term_3

   66 term_2: var
   67       | NUMBER
   68       | L_PAREN expression R_PAREN

   69 term_3: IDENT L_PAREN term_31 R_PAREN

   70 term_31: expression term_32
   71        | %empty

   72 term_32: COMMA term_31
   73        | %empty

   74 var: IDENT var_2

   75 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   76      | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 12
ARRAY (266) 13
OF (267) 13
IF (268) 24
THEN (269) 24
ENDIF (270) 24
ELSE (271) 26
WHILE (272) 27 29
DO (273) 29
BEGINLOOP (274) 27 29
ENDLOOP (275) 27 29
CONTINUE (276) 21
READ (277) 30
WRITE (278) 33
RETURN (279) 22
AND (280) 40
OR (281) 37
NOT (282) 43
TRUE (283) 45
FALSE (284) 46
SUB (285) 56 63
ADD (286) 55
MULT (287) 59
DIV (288) 60
MOD (289) 61
EQ (290) 48
NEQ (291) 49
LT (292) 50
GT (293) 51
LTE (294) 52
GTE (295) 53
SEMICOLON (296) 4 6 8
COLON (297) 12
COMMA (298) 11 31 34 72
L_PAREN (299) 47 68 69
R_PAREN (300) 47 68 69
L_SQUARE_BRACKET (301) 13 75
R_SQUARE_BRACKET (302) 13 75
ASSIGN (303) 23
NUMBER (304) 13 67
IDENT (305) 5 10 11 69 74


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program_start (52)
    on left: 1, on right: 0
functions (53)
    on left: 2 3, on right: 1 2
function (54)
    on left: 4, on right: 2
ident_term (55)
    on left: 5, on right: 4
stmt_loop (56)
    on left: 6 7, on right: 4 6 24 26 27 29
declare_loop (57)
    on left: 8 9, on right: 4 8
declaration (58)
    on left: 10, on right: 8
ident_loop (59)
    on left: 11 12, on right: 10 11
declaration_3 (60)
    on left: 13 14, on right: 12
stmt_options (61)
    on left: 15 16 17 18 19 20 21 22, on right: 6
statement_1 (62)
    on left: 23, on right: 15
statement_2 (63)
    on left: 24, on right: 16
statement_21 (64)
    on left: 25 26, on right: 24
statement_3 (65)
    on left: 27, on right: 17
b_loop (66)
    on left: 28, on right: 27 29
statement_4 (67)
    on left: 29, on right: 18
statement_5 (68)
    on left: 30, on right: 19
statement_51 (69)
    on left: 31 32, on right: 30 31
statement_6 (70)
    on left: 33, on right: 20
statement_61 (71)
    on left: 34 35, on right: 33 34
bool_exp (72)
    on left: 36, on right: 24 27 29 47
bool_exp2 (73)
    on left: 37 38, on right: 36 37
rel_and_exp (74)
    on left: 39, on right: 36 37
rel_and_exp2 (75)
    on left: 40 41, on right: 39 40
relation_exp (76)
    on left: 42 43, on right: 39 40
relation_exp_s (77)
    on left: 44 45 46 47, on right: 42 43
comp (78)
    on left: 48 49 50 51 52 53, on right: 44
expression (79)
    on left: 54, on right: 22 23 44 68 70 75
expression_2 (80)
    on left: 55 56 57, on right: 54 55 56
mult_expr (81)
    on left: 58, on right: 54 55 56
mult_expr_2 (82)
    on left: 59 60 61 62, on right: 58 59 60 61
term (83)
    on left: 63 64 65, on right: 58 59 60 61
term_2 (84)
    on left: 66 67 68, on right: 63 64
term_3 (85)
    on left: 69, on right: 65
term_31 (86)
    on left: 70 71, on right: 69 72
term_32 (87)
    on left: 72 73, on right: 70
var (88)
    on left: 74, on right: 23 30 31 33 34 66
var_2 (89)
    on left: 75 76, on right: 74


State 0

    0 $accept: . program_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    program_start  go to state 2
    functions      go to state 3
    function       go to state 4


State 1

    4 function: FUNCTION . ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    IDENT  shift, and go to state 5

    ident_term  go to state 6


State 2

    0 $accept: program_start . $end

    $end  shift, and go to state 7


State 3

    1 program_start: functions .

    $default  reduce using rule 1 (program_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4


State 5

    5 ident_term: IDENT .

    $default  reduce using rule 5 (ident_term)


State 6

    4 function: FUNCTION ident_term . SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: program_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: FUNCTION ident_term SEMICOLON . BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS . declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 9 (declare_loop)

    declare_loop  go to state 12
    declaration   go to state 13


State 11

   10 declaration: IDENT . ident_loop

    COLON  shift, and go to state 14
    COMMA  shift, and go to state 15

    ident_loop  go to state 16


State 12

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop . END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    END_PARAMS  shift, and go to state 17


State 13

    8 declare_loop: declaration . SEMICOLON declare_loop

    SEMICOLON  shift, and go to state 18


State 14

   12 ident_loop: COLON . declaration_3 INTEGER

    ARRAY  shift, and go to state 19

    $default  reduce using rule 14 (declaration_3)

    declaration_3  go to state 20


State 15

   11 ident_loop: COMMA . IDENT ident_loop

    IDENT  shift, and go to state 21


State 16

   10 declaration: IDENT ident_loop .

    $default  reduce using rule 10 (declaration)


State 17

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS . BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 18

    8 declare_loop: declaration SEMICOLON . declare_loop

    IDENT  shift, and go to state 11

    $default  reduce using rule 9 (declare_loop)

    declare_loop  go to state 23
    declaration   go to state 13


State 19

   13 declaration_3: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 24


State 20

   12 ident_loop: COLON declaration_3 . INTEGER

    INTEGER  shift, and go to state 25


State 21

   11 ident_loop: COMMA IDENT . ident_loop

    COLON  shift, and go to state 14
    COMMA  shift, and go to state 15

    ident_loop  go to state 26


State 22

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS . declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 9 (declare_loop)

    declare_loop  go to state 27
    declaration   go to state 13


State 23

    8 declare_loop: declaration SEMICOLON declare_loop .

    $default  reduce using rule 8 (declare_loop)


State 24

   13 declaration_3: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 28


State 25

   12 ident_loop: COLON declaration_3 INTEGER .

    $default  reduce using rule 12 (ident_loop)


State 26

   11 ident_loop: COMMA IDENT ident_loop .

    $default  reduce using rule 11 (ident_loop)


State 27

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop . END_LOCALS BEGIN_BODY stmt_loop END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS . BEGIN_BODY stmt_loop END_BODY

    BEGIN_BODY  shift, and go to state 31


State 30

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 32


State 31

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY . stmt_loop END_BODY

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (stmt_loop)

    stmt_loop     go to state 41
    stmt_options  go to state 42
    statement_1   go to state 43
    statement_2   go to state 44
    statement_3   go to state 45
    statement_4   go to state 46
    statement_5   go to state 47
    statement_6   go to state 48
    var           go to state 49


State 32

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 13 (declaration_3)


State 33

   24 statement_2: IF . bool_exp THEN stmt_loop statement_21 ENDIF

    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    bool_exp        go to state 57
    rel_and_exp     go to state 58
    relation_exp    go to state 59
    relation_exp_s  go to state 60
    expression      go to state 61
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 34

   27 statement_3: WHILE . bool_exp b_loop BEGINLOOP stmt_loop ENDLOOP

    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    bool_exp        go to state 67
    rel_and_exp     go to state 58
    relation_exp    go to state 59
    relation_exp_s  go to state 60
    expression      go to state 61
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 35

   29 statement_4: DO . b_loop BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

    $default  reduce using rule 28 (b_loop)

    b_loop  go to state 68


State 36

   21 stmt_options: CONTINUE .

    $default  reduce using rule 21 (stmt_options)


State 37

   30 statement_5: READ . var statement_51

    IDENT  shift, and go to state 40

    var  go to state 69


State 38

   33 statement_6: WRITE . var statement_61

    IDENT  shift, and go to state 40

    var  go to state 70


State 39

   22 stmt_options: RETURN . expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    expression  go to state 72
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    var         go to state 66


State 40

   74 var: IDENT . var_2

    L_SQUARE_BRACKET  shift, and go to state 73

    $default  reduce using rule 76 (var_2)

    var_2  go to state 74


State 41

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop . END_BODY

    END_BODY  shift, and go to state 75


State 42

    6 stmt_loop: stmt_options . SEMICOLON stmt_loop

    SEMICOLON  shift, and go to state 76


State 43

   15 stmt_options: statement_1 .

    $default  reduce using rule 15 (stmt_options)


State 44

   16 stmt_options: statement_2 .

    $default  reduce using rule 16 (stmt_options)


State 45

   17 stmt_options: statement_3 .

    $default  reduce using rule 17 (stmt_options)


State 46

   18 stmt_options: statement_4 .

    $default  reduce using rule 18 (stmt_options)


State 47

   19 stmt_options: statement_5 .

    $default  reduce using rule 19 (stmt_options)


State 48

   20 stmt_options: statement_6 .

    $default  reduce using rule 20 (stmt_options)


State 49

   23 statement_1: var . ASSIGN expression

    ASSIGN  shift, and go to state 77


State 50

   43 relation_exp: NOT . relation_exp_s

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    relation_exp_s  go to state 78
    expression      go to state 61
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 51

   45 relation_exp_s: TRUE .

    $default  reduce using rule 45 (relation_exp_s)


State 52

   46 relation_exp_s: FALSE .

    $default  reduce using rule 46 (relation_exp_s)


State 53

   63 term: SUB . term_2

    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 40

    term_2  go to state 79
    var     go to state 66


State 54

   47 relation_exp_s: L_PAREN . bool_exp R_PAREN
   68 term_2: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    bool_exp        go to state 80
    rel_and_exp     go to state 58
    relation_exp    go to state 59
    relation_exp_s  go to state 60
    expression      go to state 81
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 55

   67 term_2: NUMBER .

    $default  reduce using rule 67 (term_2)


State 56

   69 term_3: IDENT . L_PAREN term_31 R_PAREN
   74 var: IDENT . var_2

    L_PAREN           shift, and go to state 82
    L_SQUARE_BRACKET  shift, and go to state 73

    $default  reduce using rule 76 (var_2)

    var_2  go to state 74


State 57

   24 statement_2: IF bool_exp . THEN stmt_loop statement_21 ENDIF

    THEN  shift, and go to state 83


State 58

   36 bool_exp: rel_and_exp . bool_exp2

    OR  shift, and go to state 84

    $default  reduce using rule 38 (bool_exp2)

    bool_exp2  go to state 85


State 59

   39 rel_and_exp: relation_exp . rel_and_exp2

    AND  shift, and go to state 86

    $default  reduce using rule 41 (rel_and_exp2)

    rel_and_exp2  go to state 87


State 60

   42 relation_exp: relation_exp_s .

    $default  reduce using rule 42 (relation_exp)


State 61

   44 relation_exp_s: expression . comp expression

    EQ   shift, and go to state 88
    NEQ  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    LTE  shift, and go to state 92
    GTE  shift, and go to state 93

    comp  go to state 94


State 62

   54 expression: mult_expr . expression_2

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 57 (expression_2)

    expression_2  go to state 97


State 63

   58 mult_expr: term . mult_expr_2

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 62 (mult_expr_2)

    mult_expr_2  go to state 101


State 64

   64 term: term_2 .

    $default  reduce using rule 64 (term)


State 65

   65 term: term_3 .

    $default  reduce using rule 65 (term)


State 66

   66 term_2: var .

    $default  reduce using rule 66 (term_2)


State 67

   27 statement_3: WHILE bool_exp . b_loop BEGINLOOP stmt_loop ENDLOOP

    $default  reduce using rule 28 (b_loop)

    b_loop  go to state 102


State 68

   29 statement_4: DO b_loop . BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 103


State 69

   30 statement_5: READ var . statement_51

    COMMA  shift, and go to state 104

    $default  reduce using rule 32 (statement_51)

    statement_51  go to state 105


State 70

   33 statement_6: WRITE var . statement_61

    COMMA  shift, and go to state 106

    $default  reduce using rule 35 (statement_61)

    statement_61  go to state 107


State 71

   68 term_2: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    expression  go to state 108
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    var         go to state 66


State 72

   22 stmt_options: RETURN expression .

    $default  reduce using rule 22 (stmt_options)


State 73

   75 var_2: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    expression  go to state 109
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    var         go to state 66


State 74

   74 var: IDENT var_2 .

    $default  reduce using rule 74 (var)


State 75

    4 function: FUNCTION ident_term SEMICOLON BEGIN_PARAMS declare_loop END_PARAMS BEGIN_LOCALS declare_loop END_LOCALS BEGIN_BODY stmt_loop END_BODY .

    $default  reduce using rule 4 (function)


State 76

    6 stmt_loop: stmt_options SEMICOLON . stmt_loop

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (stmt_loop)

    stmt_loop     go to state 110
    stmt_options  go to state 42
    statement_1   go to state 43
    statement_2   go to state 44
    statement_3   go to state 45
    statement_4   go to state 46
    statement_5   go to state 47
    statement_6   go to state 48
    var           go to state 49


State 77

   23 statement_1: var ASSIGN . expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    expression  go to state 111
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    var         go to state 66


State 78

   43 relation_exp: NOT relation_exp_s .

    $default  reduce using rule 43 (relation_exp)


State 79

   63 term: SUB term_2 .

    $default  reduce using rule 63 (term)


State 80

   47 relation_exp_s: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 112


State 81

   44 relation_exp_s: expression . comp expression
   68 term_2: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 88
    NEQ      shift, and go to state 89
    LT       shift, and go to state 90
    GT       shift, and go to state 91
    LTE      shift, and go to state 92
    GTE      shift, and go to state 93
    R_PAREN  shift, and go to state 113

    comp  go to state 94


State 82

   69 term_3: IDENT L_PAREN . term_31 R_PAREN

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    $default  reduce using rule 71 (term_31)

    expression  go to state 114
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    term_31     go to state 115
    var         go to state 66


State 83

   24 statement_2: IF bool_exp THEN . stmt_loop statement_21 ENDIF

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (stmt_loop)

    stmt_loop     go to state 116
    stmt_options  go to state 42
    statement_1   go to state 43
    statement_2   go to state 44
    statement_3   go to state 45
    statement_4   go to state 46
    statement_5   go to state 47
    statement_6   go to state 48
    var           go to state 49


State 84

   37 bool_exp2: OR . rel_and_exp bool_exp2

    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    rel_and_exp     go to state 117
    relation_exp    go to state 59
    relation_exp_s  go to state 60
    expression      go to state 61
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 85

   36 bool_exp: rel_and_exp bool_exp2 .

    $default  reduce using rule 36 (bool_exp)


State 86

   40 rel_and_exp2: AND . relation_exp rel_and_exp2

    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    relation_exp    go to state 118
    relation_exp_s  go to state 60
    expression      go to state 61
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 87

   39 rel_and_exp: relation_exp rel_and_exp2 .

    $default  reduce using rule 39 (rel_and_exp)


State 88

   48 comp: EQ .

    $default  reduce using rule 48 (comp)


State 89

   49 comp: NEQ .

    $default  reduce using rule 49 (comp)


State 90

   50 comp: LT .

    $default  reduce using rule 50 (comp)


State 91

   51 comp: GT .

    $default  reduce using rule 51 (comp)


State 92

   52 comp: LTE .

    $default  reduce using rule 52 (comp)


State 93

   53 comp: GTE .

    $default  reduce using rule 53 (comp)


State 94

   44 relation_exp_s: expression comp . expression

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    expression  go to state 119
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    var         go to state 66


State 95

   56 expression_2: SUB . mult_expr expression_2

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    mult_expr  go to state 120
    term       go to state 63
    term_2     go to state 64
    term_3     go to state 65
    var        go to state 66


State 96

   55 expression_2: ADD . mult_expr expression_2

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    mult_expr  go to state 121
    term       go to state 63
    term_2     go to state 64
    term_3     go to state 65
    var        go to state 66


State 97

   54 expression: mult_expr expression_2 .

    $default  reduce using rule 54 (expression)


State 98

   59 mult_expr_2: MULT . term mult_expr_2

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    term    go to state 122
    term_2  go to state 64
    term_3  go to state 65
    var     go to state 66


State 99

   60 mult_expr_2: DIV . term mult_expr_2

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    term    go to state 123
    term_2  go to state 64
    term_3  go to state 65
    var     go to state 66


State 100

   61 mult_expr_2: MOD . term mult_expr_2

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    term    go to state 124
    term_2  go to state 64
    term_3  go to state 65
    var     go to state 66


State 101

   58 mult_expr: term mult_expr_2 .

    $default  reduce using rule 58 (mult_expr)


State 102

   27 statement_3: WHILE bool_exp b_loop . BEGINLOOP stmt_loop ENDLOOP

    BEGINLOOP  shift, and go to state 125


State 103

   29 statement_4: DO b_loop BEGINLOOP . stmt_loop ENDLOOP WHILE bool_exp

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (stmt_loop)

    stmt_loop     go to state 126
    stmt_options  go to state 42
    statement_1   go to state 43
    statement_2   go to state 44
    statement_3   go to state 45
    statement_4   go to state 46
    statement_5   go to state 47
    statement_6   go to state 48
    var           go to state 49


State 104

   31 statement_51: COMMA . var statement_51

    IDENT  shift, and go to state 40

    var  go to state 127


State 105

   30 statement_5: READ var statement_51 .

    $default  reduce using rule 30 (statement_5)


State 106

   34 statement_61: COMMA . var statement_61

    IDENT  shift, and go to state 40

    var  go to state 128


State 107

   33 statement_6: WRITE var statement_61 .

    $default  reduce using rule 33 (statement_6)


State 108

   68 term_2: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 113


State 109

   75 var_2: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 129


State 110

    6 stmt_loop: stmt_options SEMICOLON stmt_loop .

    $default  reduce using rule 6 (stmt_loop)


State 111

   23 statement_1: var ASSIGN expression .

    $default  reduce using rule 23 (statement_1)


State 112

   47 relation_exp_s: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 47 (relation_exp_s)


State 113

   68 term_2: L_PAREN expression R_PAREN .

    $default  reduce using rule 68 (term_2)


State 114

   70 term_31: expression . term_32

    COMMA  shift, and go to state 130

    $default  reduce using rule 73 (term_32)

    term_32  go to state 131


State 115

   69 term_3: IDENT L_PAREN term_31 . R_PAREN

    R_PAREN  shift, and go to state 132


State 116

   24 statement_2: IF bool_exp THEN stmt_loop . statement_21 ENDIF

    ELSE  shift, and go to state 133

    $default  reduce using rule 25 (statement_21)

    statement_21  go to state 134


State 117

   37 bool_exp2: OR rel_and_exp . bool_exp2

    OR  shift, and go to state 84

    $default  reduce using rule 38 (bool_exp2)

    bool_exp2  go to state 135


State 118

   40 rel_and_exp2: AND relation_exp . rel_and_exp2

    AND  shift, and go to state 86

    $default  reduce using rule 41 (rel_and_exp2)

    rel_and_exp2  go to state 136


State 119

   44 relation_exp_s: expression comp expression .

    $default  reduce using rule 44 (relation_exp_s)


State 120

   56 expression_2: SUB mult_expr . expression_2

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 57 (expression_2)

    expression_2  go to state 137


State 121

   55 expression_2: ADD mult_expr . expression_2

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 57 (expression_2)

    expression_2  go to state 138


State 122

   59 mult_expr_2: MULT term . mult_expr_2

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 62 (mult_expr_2)

    mult_expr_2  go to state 139


State 123

   60 mult_expr_2: DIV term . mult_expr_2

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 62 (mult_expr_2)

    mult_expr_2  go to state 140


State 124

   61 mult_expr_2: MOD term . mult_expr_2

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 62 (mult_expr_2)

    mult_expr_2  go to state 141


State 125

   27 statement_3: WHILE bool_exp b_loop BEGINLOOP . stmt_loop ENDLOOP

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (stmt_loop)

    stmt_loop     go to state 142
    stmt_options  go to state 42
    statement_1   go to state 43
    statement_2   go to state 44
    statement_3   go to state 45
    statement_4   go to state 46
    statement_5   go to state 47
    statement_6   go to state 48
    var           go to state 49


State 126

   29 statement_4: DO b_loop BEGINLOOP stmt_loop . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 143


State 127

   31 statement_51: COMMA var . statement_51

    COMMA  shift, and go to state 104

    $default  reduce using rule 32 (statement_51)

    statement_51  go to state 144


State 128

   34 statement_61: COMMA var . statement_61

    COMMA  shift, and go to state 106

    $default  reduce using rule 35 (statement_61)

    statement_61  go to state 145


State 129

   75 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 75 (var_2)


State 130

   72 term_32: COMMA . term_31

    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 71
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    $default  reduce using rule 71 (term_31)

    expression  go to state 114
    mult_expr   go to state 62
    term        go to state 63
    term_2      go to state 64
    term_3      go to state 65
    term_31     go to state 146
    var         go to state 66


State 131

   70 term_31: expression term_32 .

    $default  reduce using rule 70 (term_31)


State 132

   69 term_3: IDENT L_PAREN term_31 R_PAREN .

    $default  reduce using rule 69 (term_3)


State 133

   26 statement_21: ELSE . stmt_loop

    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 40

    $default  reduce using rule 7 (stmt_loop)

    stmt_loop     go to state 147
    stmt_options  go to state 42
    statement_1   go to state 43
    statement_2   go to state 44
    statement_3   go to state 45
    statement_4   go to state 46
    statement_5   go to state 47
    statement_6   go to state 48
    var           go to state 49


State 134

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 . ENDIF

    ENDIF  shift, and go to state 148


State 135

   37 bool_exp2: OR rel_and_exp bool_exp2 .

    $default  reduce using rule 37 (bool_exp2)


State 136

   40 rel_and_exp2: AND relation_exp rel_and_exp2 .

    $default  reduce using rule 40 (rel_and_exp2)


State 137

   56 expression_2: SUB mult_expr expression_2 .

    $default  reduce using rule 56 (expression_2)


State 138

   55 expression_2: ADD mult_expr expression_2 .

    $default  reduce using rule 55 (expression_2)


State 139

   59 mult_expr_2: MULT term mult_expr_2 .

    $default  reduce using rule 59 (mult_expr_2)


State 140

   60 mult_expr_2: DIV term mult_expr_2 .

    $default  reduce using rule 60 (mult_expr_2)


State 141

   61 mult_expr_2: MOD term mult_expr_2 .

    $default  reduce using rule 61 (mult_expr_2)


State 142

   27 statement_3: WHILE bool_exp b_loop BEGINLOOP stmt_loop . ENDLOOP

    ENDLOOP  shift, and go to state 149


State 143

   29 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 150


State 144

   31 statement_51: COMMA var statement_51 .

    $default  reduce using rule 31 (statement_51)


State 145

   34 statement_61: COMMA var statement_61 .

    $default  reduce using rule 34 (statement_61)


State 146

   72 term_32: COMMA term_31 .

    $default  reduce using rule 72 (term_32)


State 147

   26 statement_21: ELSE stmt_loop .

    $default  reduce using rule 26 (statement_21)


State 148

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF .

    $default  reduce using rule 24 (statement_2)


State 149

   27 statement_3: WHILE bool_exp b_loop BEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 27 (statement_3)


State 150

   29 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 50
    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    SUB      shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 55
    IDENT    shift, and go to state 56

    bool_exp        go to state 151
    rel_and_exp     go to state 58
    relation_exp    go to state 59
    relation_exp_s  go to state 60
    expression      go to state 61
    mult_expr       go to state 62
    term            go to state 63
    term_2          go to state 64
    term_3          go to state 65
    var             go to state 66


State 151

   29 statement_4: DO b_loop BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 29 (statement_4)
